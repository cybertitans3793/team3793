package org.usfirst.frc.team3793.robot;

//all imports below
import edu.wpi.first.wpilibj.IterativeRobot; //basics
import edu.wpi.first.wpilibj.Joystick; //driving
import edu.wpi.first.wpilibj.RobotDrive; //driving
import edu.wpi.first.wpilibj.Compressor; //compressor
import edu.wpi.first.wpilibj.Solenoid; //something about the compressor
import edu.wpi.first.wpilibj.Talon;
import edu.wpi.first.wpilibj.Timer;
import edu.wpi.first.wpilibj.image.BinaryImage; //image analyzing
import edu.wpi.first.wpilibj.image.ColorImage; //color image
import edu.wpi.first.wpilibj.image.NIVisionException; //idk
import edu.wpi.first.wpilibj.image.ParticleAnalysisReport; //used for shifting through image for shapes
import edu.wpi.first.wpilibj.vision.AxisCamera;


/**
 * The VM is configured to automatically run this class, and to call the
 * functions corresponding to each mode, as described in the IterativeRobot
 * documentation. If you change the name of this class or the package after
 * creating this project, you must also update the manifest file in the resource 
 * directory.
 */

public class Robot extends IterativeRobot {

	/**
	 * Has the button to move the piston been released since the last state change
	 */
	private boolean hasReleased = true;
	public Joystick joystick1 = new Joystick(0);
	public Solenoid solenoid = new Solenoid(0);
	public Compressor compressor = new Compressor(0);
	public Talon talon1 = new Talon(0);
	//public AxisCamera camera = new AxisCamera(IP_ADDRESS_HERE_IN_QUOTES);
	
	//------BUTTONS--------  (should be 1-#OfButtons)
	
	/**the button index used for toggling the piston state*/
	private final int pistonToggle = 1;
	/**the index of button that must be held to turn on talon1*/
	private final int talon1Safety = 2;
	
	//------AXES-----------  (should be 0-3)
	
	/**the axis index on the joystick (-1.0 <= value <= 1.0) that is used for talon1's speed*/
	private final int talon1Control = 2;


	//code below run once when robot starts 
    public void robotInit() 
    {
    	compressor.start();
    }
    
    //This function is called periodically during autonomous - requires code as of now
    public void autonomousPeriodic() { 
    }
 
    // This function is called every 20 milliseconds approximately during operator control
    public void teleopPeriodic() { 
    	
    	//piston toggle
    	if (joystick1.getRawButton(pistonToggle))
    	{
    		if (hasReleased)
    		{
    			solenoid.set(!solenoid.get());
    			hasReleased = false;
    		}
    	}
    	else if (!hasReleased)
    	{
    		hasReleased = true;
    	}
    	
    	//talon1 speed
    	if (joystick1.getRawButton(talon1Safety))
    	{
    		talon1.set(joystick1.getRawAxis(talon1Control));
    	}
    	else
    		talon1.set(0.0);
    	
    } 
            
   
    // This function is called periodically during test mode
    public void testPeriodic()
    {
    	
    }
}

//THS CyberTitans
